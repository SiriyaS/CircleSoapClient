
package serviceclient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CircleService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CircleService {


    /**
     * 
     * @param radius
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findArea", targetNamespace = "http://services/", className = "serviceclient.FindArea")
    @ResponseWrapper(localName = "findAreaResponse", targetNamespace = "http://services/", className = "serviceclient.FindAreaResponse")
    @Action(input = "http://services/CircleService/findAreaRequest", output = "http://services/CircleService/findAreaResponse")
    public Double findArea(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

    /**
     * 
     * @param radius
     * @return
     *     returns java.lang.Double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCircumference", targetNamespace = "http://services/", className = "serviceclient.FindCircumference")
    @ResponseWrapper(localName = "findCircumferenceResponse", targetNamespace = "http://services/", className = "serviceclient.FindCircumferenceResponse")
    @Action(input = "http://services/CircleService/findCircumferenceRequest", output = "http://services/CircleService/findCircumferenceResponse")
    public Double findCircumference(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

}
